@startuml

package transaction {
  interface Transaction {
    --
    execute(): void
  }

  class AddEmployeeTransaction {
    --
    execute(): void;
  }

  class AddHourlyEmployee {
    - hourlyRate 
  }

  class AddSalariedEmployee {
    - salary
  }

  class AddComissionedEmployee {
    - salary
    - comissionRate
  }
}


package entity {
  class Employee {
    - empID
    - name
    - address
    - classification: Classification
    --
    + setClassification()
  }
}

package value-object {
  interface PaymentClassification

  class HourlyClassification {
    - hourlyRate
  }

  class SalariedClassification {
    - salary
  }

  class ComissionedClassification {
    - salary
    - comissionRate
  }
}

package database {
  class PayrollDatabase {
    --
    + addEmployee(empID: number, employee: Employee): void;
    + getEmployee(empID: number): Employee
  }
}

Transaction <|-- AddEmployeeTransaction
AddEmployeeTransaction <|-- AddHourlyEmployee
AddEmployeeTransaction <|-- AddSalariedEmployee
AddEmployeeTransaction <|-- AddComissionedEmployee

PaymentClassification <|-- HourlyClassification
PaymentClassification <|-- SalariedClassification
PaymentClassification <|-- ComissionedClassification

Employee *-- PaymentClassification

AddEmployeeTransaction --> Employee
AddEmployeeTransaction --> PayrollDatabase

@enduml